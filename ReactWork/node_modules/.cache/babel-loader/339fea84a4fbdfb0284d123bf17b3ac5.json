{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/parzival/Desktop/final/src/components/Button.js\";\nimport React from 'react';\nimport './Button.css';\nconst STYLES = ['btn-primary', 'btn-outline'];\nconst SIZES = ['btn-medium', 'btn-large'];\nexport const Button = ({\n  children,\n  type,\n  onClick,\n  buttonStyle,\n  buttonSize\n}) => {\n  const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `btn ${checkButtonStyle} ${checkButtonSize}`,\n    onClick: onClick,\n    type: type,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 13\n  }, this);\n};\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/home/parzival/Desktop/final/src/components/Button.js"],"names":["React","STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AAEA,MAAMC,MAAM,GAAG,CAAC,aAAD,EAAgB,aAAhB,CAAf;AACA,MAAMC,KAAK,GAAG,CAAC,YAAD,EAAe,WAAf,CAAd;AAEA,OAAO,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA,OAAlB;AAA2BC,EAAAA,WAA3B;AAAwCC,EAAAA;AAAxC,CAAD,KAAyD;AAC3E,QAAMC,gBAAgB,GAAGR,MAAM,CAACS,QAAP,CAAgBH,WAAhB,IAA+BA,WAA/B,GAA6CN,MAAM,CAAC,CAAD,CAA5E;AAEA,QAAMU,eAAe,GAAGT,KAAK,CAACQ,QAAN,CAAeF,UAAf,IAA6BA,UAA7B,GAA0CN,KAAK,CAAC,CAAD,CAAvE;AAEA,sBAEQ;AAAQ,IAAA,SAAS,EAAG,OAAMO,gBAAiB,IAAGE,eAAgB,EAA9D;AAAiE,IAAA,OAAO,EAAEL,OAA1E;AAAmF,IAAA,IAAI,EAAED,IAAzF;AAAA,cACKD;AADL;AAAA;AAAA;AAAA;AAAA,UAFR;AAOH,CAZM;KAAMD,M","sourcesContent":["import React from 'react';\nimport './Button.css';\n\nconst STYLES = ['btn-primary', 'btn-outline'];\nconst SIZES = ['btn-medium', 'btn-large'];\n\nexport const Button = ({ children, type, onClick, buttonStyle, buttonSize}) => {\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n\n    return(\n        \n            <button className={`btn ${checkButtonStyle} ${checkButtonSize}`} onClick={onClick} type={type}>\n                {children}\n            </button>\n        \n    ); \n};"]},"metadata":{},"sourceType":"module"}